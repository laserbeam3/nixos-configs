##### Workspace management
#
# Alt + Tab => Works like in Windows, across all workspaces (this is ALWAYS
#              needed as backup for anyone random at the keyboard.) We can't
#              only have optimized shortcuts.
# Super + A => Open the Overview (which lets you drag windows around)
#
# Modifiers to move arround (with your arrow keys):
# Super                + arrows => Focus within a single workspace.
# Super + Ctrl         + arrows => Focus between workspaces and outputs
# Super + Shift        + arrows => Move column within a single workspace.
# Super + Shift + Ctrl + arrows => Move column between workspaces and outputs.
# Super + Shift + Alt  + arrows => Move windows in and out of columns.
#
# TLDR: Super always means "Affects your window manager", Shift always "moves",
# Ctrl always means "between workspaces" and Alt means "fine grained".
#


spawn-at-startup "waybar"
spawn-at-startup "swww-daemon"
spawn-at-startup "set_wallpaper"
spawn-at-startup "niriswitcher"

window-rule {
  draw-border-with-background false
  geometry-corner-radius 6
  clip-to-geometry true
}

window-rule {
  match is-floating=false
  shadow {
    off
  }

  focus-ring {
    width 5
    active-color "#97bf6c"
    inactive-color "#aab4a2"
    urgent-color "#b5a0f2"
  }
}

window-rule {
  match title="^Settings â€” Albert$"
  open-floating true
}

window-rule {
  match app-id="org.gnome.Nautilus" title="^Open (Folder|File)$"
  open-floating true
}

window-rule {
  match app-id="org.pulseaudio.pavucontrol"
  open-floating true
  default-floating-position x=0 y=0 relative-to="bottom-left"
}

input {
  keyboard {
    xkb {
      layout "us"
    }
    numlock
  }
}

output "LG Electronics LG HDR DQHD 0x0004F94B" {
  mode "5120x1440@60.000"
  scale 1.0
  variable-refresh-rate on-demand=true
  focus-at-startup
}

output "Samsung Electric Company Q90A 0x01000E00" {
  mode "1920x1080@60.000"
  scale 1.0
}

prefer-no-csd
layout {
  gaps 6
  center-focused-column "never"
  always-center-single-column
  default-column-display "normal"  // "normal" / "tabbed"

  default-column-width { proportion 0.25; }
  preset-column-widths {
    proportion 0.25
    proportion 0.3333
    proportion 0.5
  }

  focus-ring {
    width 5
    active-color "#ed8fad"
    inactive-color "#aab4a2"
    urgent-color "#b5a0f2"
  }

  border {
    off
  }

  shadow {
    on
    color "#000000a0"
  }

  tab-indicator {
    width 4
    gap 8
    corner-radius 4
    length total-proportion=0.35
    gaps-between-tabs 12
    position "left"
    place-within-column
    hide-when-single-tab
  }
}

animations {
  slowdown 0.45
  window-resize {
    curve "linear"
    duration-ms 0
  }
}

binds {
    // Keys consist of modifiers separated by + signs, followed by an XKB key name
    // in the end. To find an XKB name for a particular key, you may use a program
    // like wev.
    //
    // "Mod" is a special modifier equal to Super when running on a TTY, and to Alt
    // when running as a winit window.
    //
    // Most actions that you can bind here can also be invoked programmatically with
    // `niri msg action do-something`.

    // Mod-Shift-/, which is usually the same as Mod-?,
    // shows a list of important hotkeys.
    Mod+Shift+Slash { show-hotkey-overlay; }

    // Suggested binds for running programs: terminal, app launcher, screen locker.
    Mod+T hotkey-overlay-title="Open a Terminal: ghostty" { spawn "ghostty"; }
    Mod+D hotkey-overlay-title="Run an Application: launcher" { spawn "albert" "toggle"; }
    Mod+L hotkey-overlay-title="Lock the Screen: swaylock" { spawn "swaylock"; }
    Mod+Tab repeat=false { spawn "niriswitcherctl" "show" "--window"; }
    Mod+Shift+Tab repeat=false { spawn "niriswitcherctl" "show" "--window"; }
    Mod+Grave repeat=false { spawn "niriswitcherctl" "show" "--workspace"; }
    Mod+Shift+Grave repeat=false { spawn "niriswitcherctl" "show" "--workspace"; }

    // You can also use a shell. Do this if you need pipes, multiple commands, etc.
    // Note: the entire command goes as a single argument in the end.
    // Mod+T { spawn "bash" "-c" "notify-send hello && exec ghostty"; }

    // Example volume keys mappings for PipeWire & WirePlumber.
    // The allow-when-locked=true property makes them work even when the session is locked.
    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02-"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }

    // Open/close the Overview: a zoomed-out view of workspaces and windows.
    // You can also move the mouse into the top-left hot corner,
    // or do a four-finger swipe up on a touchpad.
    Mod+O repeat=false { toggle-overview; }
    Mod+A repeat=false { toggle-overview; }

    Mod+Q { close-window; }

    Mod+Left  { focus-column-left; }
    Mod+Right { focus-column-right; }
    Mod+Up    { focus-window-up; }
    Mod+Down  { focus-window-down; }

    Mod+Shift+Left  { move-column-left; }
    Mod+Shift+Right { move-column-right; }
    Mod+Shift+Up    { move-window-up; }
    Mod+Shift+Down  { move-window-down; }

    // The following binds move the focused window in and out of a column.
    // If the window is alone, they will consume it into the nearby column to the side.
    // If the window is already in a column, they will expel it out.
    Mod+Alt+Left  { consume-or-expel-window-left; }
    Mod+Alt+Right { consume-or-expel-window-right; }
    Mod+Alt+Up    { move-window-up; }
    Mod+Alt+Down  { move-window-down; }

    // Consume one window from the right to the bottom of the focused column.
    Mod+Comma  { consume-window-into-column; }
    // Expel the bottom window from the focused column to the right.
    Mod+Period { expel-window-from-column; }

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    Mod+Ctrl+Left  { focus-monitor-left; }
    Mod+Ctrl+Right { focus-monitor-right; }
    Mod+Ctrl+Up    { focus-workspace-up; }
    Mod+Ctrl+Down  { focus-workspace-down; }

    Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
    Mod+Shift+Ctrl+Up    { move-column-to-workspace-up; }
    Mod+Shift+Ctrl+Down  { move-column-to-workspace-down; }

    Mod+Alt+Ctrl+Left  { move-window-to-monitor-left; }
    Mod+Alt+Ctrl+Right { move-window-to-monitor-right; }
    Mod+Alt+Ctrl+Up    { move-window-to-workspace-up; }
    Mod+Alt+Ctrl+Down  { move-window-to-workspace-down; }

    // You can bind mouse wheel scroll ticks using the following syntax.
    // These binds will change direction based on the natural-scroll setting.
    //
    // To avoid scrolling through workspaces really fast, you can use
    // the cooldown-ms property. The bind will be rate-limited to this value.
    // You can set a cooldown on any bind, but it's most useful for the wheel.
    Mod+Ctrl+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+Ctrl+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+Shift+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+Shift+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    // Usually scrolling up and down with Shift in applications results in
    // horizontal scrolling; these binds replicate that.
    Mod+WheelScrollDown      { focus-column-right; }
    Mod+WheelScrollUp        { focus-column-left; }
    Mod+Shift+WheelScrollDown { move-column-right; }
    Mod+Shift+WheelScrollUp   { move-column-left; }

    // Similarly, you can bind touchpad scroll "ticks".
    // Touchpad scrolling is continuous, so for these binds it is split into
    // discrete intervals.
    // These binds are also affected by touchpad's natural-scroll, so these
    // example binds are "inverted", since we have natural-scroll enabled for
    // touchpads by default.
    // Mod+TouchpadScrollDown { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02+"; }
    // Mod+TouchpadScrollUp   { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02-"; }

    // You can refer to workspaces by index. However, keep in mind that
    // niri is a dynamic workspace system, so these commands are kind of
    // "best effort". Trying to refer to a workspace index bigger than
    // the current workspace count will instead refer to the bottommost
    // (empty) workspace.
    //
    // For example, with 2 workspaces + 1 empty, indices 3, 4, 5 and so on
    // will all refer to the 3rd workspace.
    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Ctrl+1 { move-column-to-workspace 1; }
    Mod+Ctrl+2 { move-column-to-workspace 2; }
    Mod+Ctrl+3 { move-column-to-workspace 3; }
    Mod+Ctrl+4 { move-column-to-workspace 4; }
    Mod+Ctrl+5 { move-column-to-workspace 5; }
    Mod+Ctrl+6 { move-column-to-workspace 6; }
    Mod+Ctrl+7 { move-column-to-workspace 7; }
    Mod+Ctrl+8 { move-column-to-workspace 8; }
    Mod+Ctrl+9 { move-column-to-workspace 9; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+1 { move-window-to-workspace 1; }

    // Switches focus between the current and the previous workspace.
    // Mod+Tab { focus-workspace-previous; }

    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }

    // Expand the focused column to space not taken up by other fully visible columns.
    // Makes the column "fill the rest of the space".
    Mod+Ctrl+F { expand-column-to-available-width; }

    Mod+C { center-column; }

    // Center all fully visible columns on screen.
    Mod+Ctrl+C { center-visible-columns; }

    // Finer width adjustments.
    // This command can also:
    // * set width in pixels: "1000"
    // * adjust width in pixels: "-5" or "+5"
    // * set width as a percentage of screen width: "25%"
    // * adjust width as a percentage of screen width: "-10%" or "+10%"
    // Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    // set-column-width "100" will make the column occupy 200 physical screen pixels.
    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    // Move the focused window between the floating and the tiling layout.
    Mod+V       { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }

    // Toggle tabbed column display mode.
    // Windows in this column will appear as vertical tabs,
    // rather than stacked on top of each other.
    Mod+W { toggle-column-tabbed-display; }

    // Actions to switch layouts.
    // Note: if you uncomment these, make sure you do NOT have
    // a matching layout switch hotkey configured in xkb options above.
    // Having both at once on the same hotkey will break the switching,
    // since it will switch twice upon pressing the hotkey (once by xkb, once by niri).
    // Mod+Space       { switch-layout "next"; }
    // Mod+Shift+Space { switch-layout "prev"; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    // The quit action will show a confirmation dialog to avoid accidental exits.
    Mod+Shift+E { quit; }
    Ctrl+Alt+Delete { quit; }

    // Powers off the monitors. To turn them back on, do any input like
    // moving the mouse or pressing any other key.
    Mod+Shift+P { power-off-monitors; }
}
